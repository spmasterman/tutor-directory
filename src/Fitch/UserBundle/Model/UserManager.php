<?php

namespace Fitch\UserBundle\Model;

use Fitch\CommonBundle\Exception\EntityNotFoundException;
use Fitch\CommonBundle\Exception\InappropriateActionException;
use Fitch\CommonBundle\Model\BaseModelManager;
use Fitch\UserBundle\Entity\Repository\UserRepository;
use Fitch\UserBundle\Entity\User;

class UserManager extends BaseModelManager
{
    /**
     * @param $id
     * @throws EntityNotFoundException
     * @return User
     */
    public function findById($id)
    {
        return parent::findById($id);
    }

    /**
     * @return User[]
     */
    public function findAll()
    {
        return parent::findAll();
    }

    /**
     * @param User $user
     * @return array
     */
    public function getLogs(User $user)
    {
        return $this->em->getRepository('Gedmo\Loggable\Entity\LogEntry')->getLogEntries($user);
    }


    /**
     * @param User $user
     * @param bool $withFlush
     */
    public function saveUser(User $user, $withFlush = true)
    {
        parent::saveEntity($user, $withFlush);
    }

    /**
     * Create a new User
     *
     * Set its default values
     *
     * @return User
     */
    public function createUser()
    {
        return parent::createEntity();
    }

    /**
     * @param int $id
     * @throws InappropriateActionException
     */
    public function removeUser($id)
    {
        $user = $this->findById($id);
        parent::removeEntity($user);
    }

    /**
     * @param User $user
     */
    public function refreshUser(User $user)
    {
        parent::reloadEntity($user);
    }

    /**
     * @return UserRepository
     */
    private function getRepo()
    {
        return $this->repo;
    }

    /**
     * Used  to identify logs generated by this class
     *
     * @return string
     */
    protected function getDebugKey()
    {
        return 'fitch.manager.user';
    }
}
