{% extends 'knp_menu.html.twig' %}

{% block root %}
<ul class="breadcrumb">
    {% set listAttributes = item.childrenAttributes %}
    {{ block('list') -}}
</ul>
{% endblock %}

{% block list %}
    {% if item.hasChildren and options.depth is not sameas(0) and item.displayChildren %}
        {% import _self as knp_menu %}
            {{ block('children') }}
    {% endif %}
{% endblock %}

{% block item %}
    {% if matcher.isCurrent(item) or matcher.isAncestor(item) %}

{# building the class of the item #}
        {#{%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}#}
        {%- set classes = [] %}
        {%- if matcher.isCurrent(item) %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}

{# Mark item as "leaf" (no children) or as "branch" (has children that are displayed) #}
        {% if item.hasChildren and options.depth is not sameas(0) %}
            {% if options.branch_class is not empty and item.displayChildren %}
                {%- set classes = classes|merge([options.branch_class]) %}
            {% endif %}
        {% elseif options.leaf_class is not empty %}
            {%- set classes = classes|merge([options.leaf_class]) %}
        {%- endif %}

        {%- set attributes = item.attributes %}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}

{# displaying the item #}
        {% import "knp_menu.html.twig" as macros %}
        <li{{ macros.attributes(attributes) }}>
            {%- if item.uri is not empty and (item.hasChildren) and (not matcher.isCurrent(item) or options.currentAsLink) %}
                {{ block('linkElement') }}
            {%- else %}
                {{ block('spanElement') }}
            {%- endif %}
            {# render the list of children#}
            {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
            {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
            {% if matcher.isAncestor(item, options.matchingDepth) %}
                {%- set childrenClasses = childrenClasses|merge(['open']) %}
            {%  endif %}
            {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}

            {{ block('list') }}
        </li>
    {% endif %}
{% endblock %}

{% block linkElement %}
    {% import "knp_menu.html.twig" as macros %}
    {% if item.attribute('icon') is not empty  %}
        <i class="{{ item.attribute('icon') }}"></i>
    {% endif %}
    <a href="{{ item.uri }}"{{ macros.attributes(item.linkAttributes) }}>
        {{ block('label') }}
    </a>
{% endblock %}

{% block spanElement %}
    {% import "knp_menu.html.twig" as macros %}
    {% if item.attribute('icon') is not empty  %}
        <i class="{{ item.attribute('icon') }}"></i>
    {% endif %}
    <span>
        {{ block('label') }}
    </span>
{% endblock %}

{% block label %}{% if options.allow_safe_labels and item.getExtra('safe_label', false) %}{{ item.label|purify }}{% else %}<span class="text">{{ item.label }}</span>{% endif %}{% endblock %}
