<?php

namespace Fitch\TutorBundle\Model;

use Fitch\CommonBundle\Model\BaseModelManager;
use Fitch\TutorBundle\Entity\Repository\CategoryRepository;
use Fitch\TutorBundle\Entity\Category;

class CategoryManager extends BaseModelManager implements CategoryManagerInterface
{
    /**
     * @return array
     */
    public function buildChoices()
    {
        return $this->findAll();
    }

    /**
     * Returns all active categories as a Array - suitable for use in "select"
     * style lists, with a grouped sections.
     *
     * @return array
     */
    public function buildGroupedChoices()
    {
        $choices = [];
        foreach ($this->findAll() as $category) {
            $choices[$category->getId()] = $category->getName();
        }

        return $choices;
    }

    /**
     * @return null|Category
     */
    public function findDefaultCategory()
    {
        return $this->getRepo()->findOneBy(['default' => true]);
    }

    /**
     * Create a new Category.
     *
     * Set its default values
     *
     * @return Category
     */
    public function createCategory()
    {
        return parent::createEntity();
    }

    /**
     * @param int $id
     */
    public function removeCategory($id)
    {
        $category = $this->findById($id);
        parent::removeEntity($category);
    }

    /**
     * @param Category $category
     */
    public function refreshCategory(Category $category)
    {
        parent::reloadEntity($category);
    }

    /**
     * @return CategoryRepository
     */
    private function getRepo()
    {
        return $this->repo;
    }

    /**
     * Used  to identify logs generated by this class.
     *
     * @return string
     */
    protected function getDebugKey()
    {
        return 'fitch.manager.category';
    }
}
