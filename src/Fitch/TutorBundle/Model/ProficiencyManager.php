<?php

namespace Fitch\TutorBundle\Model;

use Fitch\CommonBundle\Exception\EntityNotFoundException;
use Fitch\CommonBundle\Model\BaseModelManager;
use Fitch\TutorBundle\Entity\Repository\ProficiencyRepository;
use Fitch\TutorBundle\Entity\Proficiency;

class ProficiencyManager extends BaseModelManager
{
    /**
     * @param $id
     *
     * @throws EntityNotFoundException
     *
     * @return Proficiency
     */
    public function findById($id)
    {
        return parent::findById($id);
    }

    /**
     * @return Proficiency[]
     */
    public function findAll()
    {
        return parent::findAll();
    }

    /**
     * @return null|Proficiency
     */
    public function findDefaultProficiency()
    {
        return $this->getRepo()->findOneBy(['default' => true]);
    }

    /**
     * @param Proficiency $proficiency
     * @param bool        $withFlush
     */
    public function saveProficiency($proficiency, $withFlush = true)
    {
        parent::saveEntity($proficiency, $withFlush);
    }

    /**
     * Create a new Proficiency.
     *
     * Set its default values
     *
     * @return Proficiency
     */
    public function createProficiency()
    {
        return parent::createEntity();
    }

    /**
     * @param int $id
     */
    public function removeProficiency($id)
    {
        $proficiency = $this->findById($id);
        parent::removeEntity($proficiency);
    }

    /**
     * @param Proficiency $proficiency
     */
    public function refreshProficiency(Proficiency $proficiency)
    {
        parent::reloadEntity($proficiency);
    }

    /**
     * @return ProficiencyRepository
     */
    private function getRepo()
    {
        return $this->repo;
    }

    /**
     * Used  to identify logs generated by this class.
     *
     * @return string
     */
    protected function getDebugKey()
    {
        return 'fitch.manager.proficiency';
    }
}
